/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * Please import the `PrismaClient` class from the `client.ts` file instead.
 */

import * as runtime from '@prisma/client/runtime/client';
import type * as Prisma from './prismaNamespace';

const config: runtime.GetPrismaClientConfig = {
  generator: {
    name: 'client',
    provider: {
      fromEnvVar: null,
      value: 'prisma-client',
    },
    output: {
      value: '/home/endy/Projects/rucken/rucken-fullstack/libs/feature/engine/src/lib/generated/prisma-client',
      fromEnvVar: null,
    },
    config: {
      moduleFormat: 'cjs',
      engineType: 'client',
    },
    binaryTargets: [
      {
        fromEnvVar: null,
        value: 'debian-openssl-3.0.x',
        native: true,
      },
    ],
    previewFeatures: ['driverAdapters', 'queryCompiler'],
    sourceFilePath: '/home/endy/Projects/rucken/rucken-fullstack/libs/feature/engine/src/prisma/schema.prisma',
    isCustomOutput: true,
  },
  relativePath: '../../../prisma',
  clientVersion: '6.9.0',
  engineVersion: '81e4af48011447c3cc503a190e86995b66d2a28e',
  datasourceNames: ['db'],
  activeProvider: 'postgresql',
  postinstall: false,
  inlineDatasources: {
    db: {
      url: {
        fromEnvVar: 'RUCKEN_ENGINE_DATABASE_URL',
        value: null,
      },
    },
  },
  inlineSchema:
    'generator client {\n  provider = "prisma-client"\n\n  output = "../../../../../libs/feature/engine/src/lib/generated/prisma-client"\n\n  previewFeatures = ["queryCompiler", "driverAdapters"]\n\n  moduleFormat = "cjs"\n}\n\ndatasource db {\n  provider = "postgres"\n  url      = env("RUCKEN_ENGINE_DATABASE_URL")\n}\n\ngenerator prismaClassGenerator {\n  provider                        = "prisma-generator-nestjs-dto"\n  output                          = "../lib/generated/rest/dto"\n  annotateAllDtoProperties        = "true"\n  classValidation                 = "true"\n  createDtoPrefix                 = "Create"\n  definiteAssignmentAssertion     = "true"\n  dtoSuffix                       = "Dto"\n  entityPrefix                    = ""\n  entitySuffix                    = ""\n  exportRelationModifierClasses   = "true"\n  fileNamingStyle                 = "kebab"\n  flatResourceStructure           = "false"\n  noDependencies                  = "false"\n  outputToNestJsResourceStructure = "false"\n  prettier                        = "true"\n  reExport                        = "false"\n  updateDtoPrefix                 = "Update"\n}\n\nmodel EngineProject {\n  /// @DtoCreateHidden\n  id                                                               String                 @id(map: "PK_ENGINE_PROJECTS") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  name                                                             String                 @db.VarChar(255)\n  nameLocale                                                       Json?\n  clientId                                                         String                 @unique(map: "UQ_ENGINE_PROJECTS__CLIENT_ID") @db.VarChar(100)\n  clientSecret                                                     String                 @db.VarChar(255)\n  public                                                           Boolean\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  createdAt                                                        DateTime               @default(now()) @db.Timestamp(6)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  updatedAt                                                        DateTime               @default(now()) @db.Timestamp(6)\n  EngineEmailTemplate                                              EngineEmailTemplate[]\n  EngineOAuthToken_EngineOAuthToken_projectIdToEngineOAuthProvider EngineOAuthToken[]     @relation("EngineOAuthToken_projectIdToEngineOAuthProvider")\n  EngineRefreshSession                                             EngineRefreshSession[]\n  EngineUser                                                       EngineUser[]\n\n  @@index([public], map: "IDX_ENGINE_PROJECTS__PUBLIC")\n}\n\nmodel EngineUser {\n  /// @DtoCreateHidden\n  id                   String                 @id(map: "PK_ENGINE_USERS") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  email                String                 @db.VarChar(255)\n  phone                String?                @db.VarChar(255)\n  username             String?                @db.VarChar(255)\n  /// @DtoEntityHidden\n  password             String                 @db.VarChar(255)\n  roles                String?                @db.VarChar(255)\n  firstname            String?                @db.VarChar(255)\n  lastname             String?                @db.VarChar(255)\n  gender               String?                @db.VarChar(1)\n  birthdate            DateTime?              @db.Timestamp(6)\n  picture              String?\n  appData              Json?\n  revokedAt            DateTime?              @db.Timestamp(6)\n  emailVerifiedAt      DateTime?              @db.Timestamp(6)\n  phoneVerifiedAt      DateTime?              @db.Timestamp(6)\n  timezone             Float?\n  lang                 String?                @db.VarChar(2)\n  projectId            String                 @db.Uuid\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  createdAt            DateTime               @default(now()) @db.Timestamp(6)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  updatedAt            DateTime               @default(now()) @db.Timestamp(6)\n  EngineOAuthToken     EngineOAuthToken[]\n  EngineRefreshSession EngineRefreshSession[]\n  EngineProject        EngineProject          @relation(fields: [projectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_USERS__PROJECT_ID")\n\n  @@unique([email, projectId], map: "UQ_ENGINE_USERS__EMAIL")\n  @@unique([username, projectId], map: "UQ_ENGINE_USERS__USERNAME")\n  @@index([projectId], map: "IDX_ENGINE_USERS__PROJECT_ID")\n}\n\nmodel migrations_engine {\n  installed_rank Int      @id(map: "__migrations_engine_pk")\n  version        String?  @db.VarChar(50)\n  description    String   @db.VarChar(200)\n  type           String   @db.VarChar(20)\n  script         String   @db.VarChar(1000)\n  checksum       Int?\n  installed_by   String   @db.VarChar(100)\n  installed_on   DateTime @default(now()) @db.Timestamp(6)\n  execution_time Int\n  success        Boolean\n\n  @@index([success], map: "__migrations_engine_s_idx")\n  @@map("__migrations_engine")\n}\n\nmodel EngineRefreshSession {\n  /// @DtoCreateHidden\n  id            String        @id(map: "PK_ENGINE_REFRESH_SESSIONS") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  /// @DtoEntityHidden\n  refreshToken  String        @db.Uuid\n  userAgent     String?       @db.VarChar(255)\n  /// @DtoEntityHidden\n  fingerprint   String?       @db.VarChar(255)\n  userIp        String?       @db.VarChar(128)\n  expiresAt     DateTime?     @db.Timestamp(6)\n  userData      Json?\n  enabled       Boolean\n  userId        String        @db.Uuid\n  projectId     String        @db.Uuid\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  createdAt     DateTime      @default(now()) @db.Timestamp(6)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  updatedAt     DateTime      @default(now()) @db.Timestamp(6)\n  EngineProject EngineProject @relation(fields: [projectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_REFRESH_SESSIONS__PROJECT_ID")\n  EngineUser    EngineUser    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_REFRESH_SESSIONS__USER_ID")\n\n  @@index([userId, projectId], map: "IDX_ENGINE_REFRESH_SESSIONS_USER_ID")\n  @@index([projectId], map: "IDX_ENGINE_REFRESH_SESSIONS__PROJECT_ID")\n}\n\nmodel EngineEmailTemplate {\n  /// @DtoCreateHidden\n  id            String        @id(map: "PK_ENGINE_EMAIL_TEMPLATES") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  subject       String\n  subjectLocale Json?\n  text          String\n  textLocale    Json?\n  html          String\n  htmlLocale    Json?\n  operationName String?       @db.VarChar(128)\n  projectId     String        @db.Uuid\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  createdAt     DateTime      @default(now()) @db.Timestamp(6)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  updatedAt     DateTime      @default(now()) @db.Timestamp(6)\n  EngineProject EngineProject @relation(fields: [projectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_EMAIL_TEMPLATES__PROJECT_ID")\n\n  @@unique([projectId, operationName], map: "UQ_ENGINE_EMAIL_TEMPLATES__OPERATION_NAME")\n  @@index([projectId], map: "IDX_ENGINE_EMAIL_TEMPLATES__PROJECT_ID")\n}\n\nmodel EngineOAuthProvider {\n  /// @DtoCreateHidden\n  id                          String                        @id(map: "PK_ENGINE_OAUTH_PROVIDER") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  name                        String                        @unique(map: "UQ_ENGINE_OAUTH_PROVIDER__NAME") @db.VarChar(255)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  createdAt                   DateTime                      @default(now()) @db.Timestamp(6)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  updatedAt                   DateTime                      @default(now()) @db.Timestamp(6)\n  EngineOAuthProviderSettings EngineOAuthProviderSettings[]\n  EngineOAuthToken            EngineOAuthToken[]\n}\n\nmodel EngineOAuthProviderSettings {\n  /// @DtoCreateHidden\n  id                  String              @id(map: "PK_ENGINE_OAUTH_PROVIDER_SETTINGS") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  name                String              @db.VarChar(255)\n  value               String\n  providerId          String              @db.Uuid\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  createdAt           DateTime            @default(now()) @db.Timestamp(6)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  updatedAt           DateTime            @default(now()) @db.Timestamp(6)\n  EngineOAuthProvider EngineOAuthProvider @relation(fields: [providerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_OAUTH_PROVIDER_SETTINGS__PROVIDER_ID")\n\n  @@unique([providerId, name], map: "UQ_ENGINE_OAUTH_PROVIDER_SETTINGS__NAME")\n  @@index([providerId], map: "IDX_ENGINE_OAUTH_PROVIDER_SETTINGS__PROVIDER_ID")\n}\n\nmodel EngineOAuthToken {\n  /// @DtoCreateHidden\n  id                                                                  String              @id(map: "PK_ENGINE_OAUTH_TOKENS_SETTINGS") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  grantedAt                                                           DateTime            @default(now()) @db.Timestamp(6)\n  /// @DtoEntityHidden\n  accessToken                                                         String              @db.VarChar(512)\n  /// @DtoEntityHidden\n  refreshToken                                                        String?             @db.VarChar(512)\n  expiresAt                                                           DateTime?           @db.Timestamp(6)\n  tokenType                                                           String?             @db.VarChar(255)\n  scope                                                               String?             @db.VarChar(512)\n  verificationCode                                                    String?             @db.VarChar(512)\n  userId                                                              String              @db.Uuid\n  projectId                                                           String              @db.Uuid\n  providerId                                                          String              @db.Uuid\n  providerUserId                                                      String              @db.VarChar(512)\n  providerUserData                                                    Json?\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  createdAt                                                           DateTime            @default(now()) @db.Timestamp(6)\n  /// @DtoCreateHidden\n  /// @DtoUpdateHidden\n  updatedAt                                                           DateTime            @default(now()) @db.Timestamp(6)\n  EngineOAuthProvider_EngineOAuthToken_projectIdToEngineOAuthProvider EngineProject       @relation("EngineOAuthToken_projectIdToEngineOAuthProvider", fields: [projectId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_OAUTH_TOKENS__PROJECT_ID")\n  EngineOAuthProvider                                                 EngineOAuthProvider @relation(fields: [providerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_OAUTH_TOKENS__PROVIDER_ID")\n  EngineUser                                                          EngineUser          @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ENGINE_OAUTH_TOKENS__USER_ID")\n\n  @@unique([providerId, projectId, userId, accessToken], map: "UQ_ENGINE_OAUTH_TOKENS__NAME")\n  @@index([projectId], map: "IDX_ENGINE_OAUTH_TOKENS__PROJECT_ID")\n  @@index([providerId], map: "IDX_ENGINE_OAUTH_TOKENS__PROVIDER_ID")\n  @@index([userId], map: "IDX_ENGINE_OAUTH_TOKENS__USER_ID")\n}\n',
  inlineSchemaHash: '953cdea77688f0eccc4328930613896be2d9f4e5193afdfc094753eb9160a1df',
  copyEngine: true,
  runtimeDataModel: {
    models: {},
    enums: {},
    types: {},
  },
  dirname: '',
};

config.runtimeDataModel = JSON.parse(
  '{"models":{"EngineProject":{"fields":[{"name":"id","kind":"scalar","type":"String"},{"name":"name","kind":"scalar","type":"String"},{"name":"nameLocale","kind":"scalar","type":"Json"},{"name":"clientId","kind":"scalar","type":"String"},{"name":"clientSecret","kind":"scalar","type":"String"},{"name":"public","kind":"scalar","type":"Boolean"},{"name":"createdAt","kind":"scalar","type":"DateTime"},{"name":"updatedAt","kind":"scalar","type":"DateTime"},{"name":"EngineEmailTemplate","kind":"object","type":"EngineEmailTemplate","relationName":"EngineEmailTemplateToEngineProject"},{"name":"EngineOAuthToken_EngineOAuthToken_projectIdToEngineOAuthProvider","kind":"object","type":"EngineOAuthToken","relationName":"EngineOAuthToken_projectIdToEngineOAuthProvider"},{"name":"EngineRefreshSession","kind":"object","type":"EngineRefreshSession","relationName":"EngineProjectToEngineRefreshSession"},{"name":"EngineUser","kind":"object","type":"EngineUser","relationName":"EngineProjectToEngineUser"}],"dbName":null},"EngineUser":{"fields":[{"name":"id","kind":"scalar","type":"String"},{"name":"email","kind":"scalar","type":"String"},{"name":"phone","kind":"scalar","type":"String"},{"name":"username","kind":"scalar","type":"String"},{"name":"password","kind":"scalar","type":"String"},{"name":"roles","kind":"scalar","type":"String"},{"name":"firstname","kind":"scalar","type":"String"},{"name":"lastname","kind":"scalar","type":"String"},{"name":"gender","kind":"scalar","type":"String"},{"name":"birthdate","kind":"scalar","type":"DateTime"},{"name":"picture","kind":"scalar","type":"String"},{"name":"appData","kind":"scalar","type":"Json"},{"name":"revokedAt","kind":"scalar","type":"DateTime"},{"name":"emailVerifiedAt","kind":"scalar","type":"DateTime"},{"name":"phoneVerifiedAt","kind":"scalar","type":"DateTime"},{"name":"timezone","kind":"scalar","type":"Float"},{"name":"lang","kind":"scalar","type":"String"},{"name":"projectId","kind":"scalar","type":"String"},{"name":"createdAt","kind":"scalar","type":"DateTime"},{"name":"updatedAt","kind":"scalar","type":"DateTime"},{"name":"EngineOAuthToken","kind":"object","type":"EngineOAuthToken","relationName":"EngineOAuthTokenToEngineUser"},{"name":"EngineRefreshSession","kind":"object","type":"EngineRefreshSession","relationName":"EngineRefreshSessionToEngineUser"},{"name":"EngineProject","kind":"object","type":"EngineProject","relationName":"EngineProjectToEngineUser"}],"dbName":null},"migrations_engine":{"fields":[{"name":"installed_rank","kind":"scalar","type":"Int"},{"name":"version","kind":"scalar","type":"String"},{"name":"description","kind":"scalar","type":"String"},{"name":"type","kind":"scalar","type":"String"},{"name":"script","kind":"scalar","type":"String"},{"name":"checksum","kind":"scalar","type":"Int"},{"name":"installed_by","kind":"scalar","type":"String"},{"name":"installed_on","kind":"scalar","type":"DateTime"},{"name":"execution_time","kind":"scalar","type":"Int"},{"name":"success","kind":"scalar","type":"Boolean"}],"dbName":"__migrations_engine"},"EngineRefreshSession":{"fields":[{"name":"id","kind":"scalar","type":"String"},{"name":"refreshToken","kind":"scalar","type":"String"},{"name":"userAgent","kind":"scalar","type":"String"},{"name":"fingerprint","kind":"scalar","type":"String"},{"name":"userIp","kind":"scalar","type":"String"},{"name":"expiresAt","kind":"scalar","type":"DateTime"},{"name":"userData","kind":"scalar","type":"Json"},{"name":"enabled","kind":"scalar","type":"Boolean"},{"name":"userId","kind":"scalar","type":"String"},{"name":"projectId","kind":"scalar","type":"String"},{"name":"createdAt","kind":"scalar","type":"DateTime"},{"name":"updatedAt","kind":"scalar","type":"DateTime"},{"name":"EngineProject","kind":"object","type":"EngineProject","relationName":"EngineProjectToEngineRefreshSession"},{"name":"EngineUser","kind":"object","type":"EngineUser","relationName":"EngineRefreshSessionToEngineUser"}],"dbName":null},"EngineEmailTemplate":{"fields":[{"name":"id","kind":"scalar","type":"String"},{"name":"subject","kind":"scalar","type":"String"},{"name":"subjectLocale","kind":"scalar","type":"Json"},{"name":"text","kind":"scalar","type":"String"},{"name":"textLocale","kind":"scalar","type":"Json"},{"name":"html","kind":"scalar","type":"String"},{"name":"htmlLocale","kind":"scalar","type":"Json"},{"name":"operationName","kind":"scalar","type":"String"},{"name":"projectId","kind":"scalar","type":"String"},{"name":"createdAt","kind":"scalar","type":"DateTime"},{"name":"updatedAt","kind":"scalar","type":"DateTime"},{"name":"EngineProject","kind":"object","type":"EngineProject","relationName":"EngineEmailTemplateToEngineProject"}],"dbName":null},"EngineOAuthProvider":{"fields":[{"name":"id","kind":"scalar","type":"String"},{"name":"name","kind":"scalar","type":"String"},{"name":"createdAt","kind":"scalar","type":"DateTime"},{"name":"updatedAt","kind":"scalar","type":"DateTime"},{"name":"EngineOAuthProviderSettings","kind":"object","type":"EngineOAuthProviderSettings","relationName":"EngineOAuthProviderToEngineOAuthProviderSettings"},{"name":"EngineOAuthToken","kind":"object","type":"EngineOAuthToken","relationName":"EngineOAuthProviderToEngineOAuthToken"}],"dbName":null},"EngineOAuthProviderSettings":{"fields":[{"name":"id","kind":"scalar","type":"String"},{"name":"name","kind":"scalar","type":"String"},{"name":"value","kind":"scalar","type":"String"},{"name":"providerId","kind":"scalar","type":"String"},{"name":"createdAt","kind":"scalar","type":"DateTime"},{"name":"updatedAt","kind":"scalar","type":"DateTime"},{"name":"EngineOAuthProvider","kind":"object","type":"EngineOAuthProvider","relationName":"EngineOAuthProviderToEngineOAuthProviderSettings"}],"dbName":null},"EngineOAuthToken":{"fields":[{"name":"id","kind":"scalar","type":"String"},{"name":"grantedAt","kind":"scalar","type":"DateTime"},{"name":"accessToken","kind":"scalar","type":"String"},{"name":"refreshToken","kind":"scalar","type":"String"},{"name":"expiresAt","kind":"scalar","type":"DateTime"},{"name":"tokenType","kind":"scalar","type":"String"},{"name":"scope","kind":"scalar","type":"String"},{"name":"verificationCode","kind":"scalar","type":"String"},{"name":"userId","kind":"scalar","type":"String"},{"name":"projectId","kind":"scalar","type":"String"},{"name":"providerId","kind":"scalar","type":"String"},{"name":"providerUserId","kind":"scalar","type":"String"},{"name":"providerUserData","kind":"scalar","type":"Json"},{"name":"createdAt","kind":"scalar","type":"DateTime"},{"name":"updatedAt","kind":"scalar","type":"DateTime"},{"name":"EngineOAuthProvider_EngineOAuthToken_projectIdToEngineOAuthProvider","kind":"object","type":"EngineProject","relationName":"EngineOAuthToken_projectIdToEngineOAuthProvider"},{"name":"EngineOAuthProvider","kind":"object","type":"EngineOAuthProvider","relationName":"EngineOAuthProviderToEngineOAuthToken"},{"name":"EngineUser","kind":"object","type":"EngineUser","relationName":"EngineOAuthTokenToEngineUser"}],"dbName":null}},"enums":{},"types":{}}',
);
config.engineWasm = undefined;
config.compilerWasm = {
  getRuntime: async () => await import('node_modules/@prisma/client/runtime/query_compiler_bg.postgresql.mjs'),

  getQueryCompilerWasmModule: async () => {
    const { readFile } = await import('node:fs/promises');

    const wasmModulePath = (await import('node:path')).resolve(
      'node_modules/@prisma/client/runtime/query_compiler_bg.postgresql.wasm',
    );
    const wasmModuleBytes = await readFile(wasmModulePath);

    return new globalThis.WebAssembly.Module(wasmModuleBytes);
  },
};

export type LogOptions<ClientOptions extends Prisma.PrismaClientOptions> = 'log' extends keyof ClientOptions
  ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition>
    ? Prisma.GetEvents<ClientOptions['log']>
    : never
  : never;

export interface PrismaClientConstructor {
  /**
   * ## Prisma Client
   *
   * Type-safe database client for TypeScript
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more EngineProjects
   * const engineProjects = await prisma.engineProject.findMany()
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  new <
    ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
    U = LogOptions<ClientOptions>,
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  >(
    options?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>,
  ): PrismaClient<ClientOptions, U, ExtArgs>;
}

/**
 * ## Prisma Client
 *
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more EngineProjects
 * const engineProjects = await prisma.engineProject.findMany()
 * ```
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */

export interface PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = LogOptions<ClientOptions>,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] };

  $on<V extends U>(
    eventType: V,
    callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void,
  ): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void;

  /**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(
    arg: [...P],
    options?: { isolationLevel?: Prisma.TransactionIsolationLevel },
  ): runtime.Types.Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>;

  $transaction<R>(
    fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => runtime.Types.Utils.JsPromise<R>,
    options?: { maxWait?: number; timeout?: number; isolationLevel?: Prisma.TransactionIsolationLevel },
  ): runtime.Types.Utils.JsPromise<R>;

  $extends: runtime.Types.Extensions.ExtendsHook<
    'extends',
    Prisma.TypeMapCb<ClientOptions>,
    ExtArgs,
    runtime.Types.Utils.Call<
      Prisma.TypeMapCb<ClientOptions>,
      {
        extArgs: ExtArgs;
      }
    >
  >;

  /**
   * `prisma.engineProject`: Exposes CRUD operations for the **EngineProject** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more EngineProjects
   * const engineProjects = await prisma.engineProject.findMany()
   * ```
   */
  get engineProject(): Prisma.EngineProjectDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.engineUser`: Exposes CRUD operations for the **EngineUser** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more EngineUsers
   * const engineUsers = await prisma.engineUser.findMany()
   * ```
   */
  get engineUser(): Prisma.EngineUserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.migrations_engine`: Exposes CRUD operations for the **migrations_engine** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more Migrations_engines
   * const migrations_engines = await prisma.migrations_engine.findMany()
   * ```
   */
  get migrations_engine(): Prisma.migrations_engineDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.engineRefreshSession`: Exposes CRUD operations for the **EngineRefreshSession** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more EngineRefreshSessions
   * const engineRefreshSessions = await prisma.engineRefreshSession.findMany()
   * ```
   */
  get engineRefreshSession(): Prisma.EngineRefreshSessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.engineEmailTemplate`: Exposes CRUD operations for the **EngineEmailTemplate** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more EngineEmailTemplates
   * const engineEmailTemplates = await prisma.engineEmailTemplate.findMany()
   * ```
   */
  get engineEmailTemplate(): Prisma.EngineEmailTemplateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.engineOAuthProvider`: Exposes CRUD operations for the **EngineOAuthProvider** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more EngineOAuthProviders
   * const engineOAuthProviders = await prisma.engineOAuthProvider.findMany()
   * ```
   */
  get engineOAuthProvider(): Prisma.EngineOAuthProviderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.engineOAuthProviderSettings`: Exposes CRUD operations for the **EngineOAuthProviderSettings** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.findMany()
   * ```
   */
  get engineOAuthProviderSettings(): Prisma.EngineOAuthProviderSettingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.engineOAuthToken`: Exposes CRUD operations for the **EngineOAuthToken** model.
   * Example usage:
   * ```ts
   * // Fetch zero or more EngineOAuthTokens
   * const engineOAuthTokens = await prisma.engineOAuthToken.findMany()
   * ```
   */
  get engineOAuthToken(): Prisma.EngineOAuthTokenDelegate<ExtArgs, ClientOptions>;
}

export function getPrismaClientClass(dirname: string): PrismaClientConstructor {
  config.dirname = dirname;
  return runtime.getPrismaClient(config) as unknown as PrismaClientConstructor;
}
