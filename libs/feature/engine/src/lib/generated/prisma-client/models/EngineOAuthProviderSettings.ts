/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `EngineOAuthProviderSettings` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from '@prisma/client/runtime/client';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model EngineOAuthProviderSettings
 *
 */
export type EngineOAuthProviderSettingsModel =
  runtime.Types.Result.DefaultSelection<Prisma.$EngineOAuthProviderSettingsPayload>;

export type AggregateEngineOAuthProviderSettings = {
  _count: EngineOAuthProviderSettingsCountAggregateOutputType | null;
  _min: EngineOAuthProviderSettingsMinAggregateOutputType | null;
  _max: EngineOAuthProviderSettingsMaxAggregateOutputType | null;
};

export type EngineOAuthProviderSettingsMinAggregateOutputType = {
  id: string | null;
  name: string | null;
  value: string | null;
  providerId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type EngineOAuthProviderSettingsMaxAggregateOutputType = {
  id: string | null;
  name: string | null;
  value: string | null;
  providerId: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type EngineOAuthProviderSettingsCountAggregateOutputType = {
  id: number;
  name: number;
  value: number;
  providerId: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type EngineOAuthProviderSettingsMinAggregateInputType = {
  id?: true;
  name?: true;
  value?: true;
  providerId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type EngineOAuthProviderSettingsMaxAggregateInputType = {
  id?: true;
  name?: true;
  value?: true;
  providerId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type EngineOAuthProviderSettingsCountAggregateInputType = {
  id?: true;
  name?: true;
  value?: true;
  providerId?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type EngineOAuthProviderSettingsAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which EngineOAuthProviderSettings to aggregate.
   */
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EngineOAuthProviderSettings to fetch.
   */
  orderBy?:
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EngineOAuthProviderSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EngineOAuthProviderSettings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned EngineOAuthProviderSettings
   **/
  _count?: true | EngineOAuthProviderSettingsCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: EngineOAuthProviderSettingsMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: EngineOAuthProviderSettingsMaxAggregateInputType;
};

export type GetEngineOAuthProviderSettingsAggregateType<T extends EngineOAuthProviderSettingsAggregateArgs> = {
  [P in keyof T & keyof AggregateEngineOAuthProviderSettings]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEngineOAuthProviderSettings[P]>
    : Prisma.GetScalarType<T[P], AggregateEngineOAuthProviderSettings[P]>;
};

export type EngineOAuthProviderSettingsGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  orderBy?:
    | Prisma.EngineOAuthProviderSettingsOrderByWithAggregationInput
    | Prisma.EngineOAuthProviderSettingsOrderByWithAggregationInput[];
  by: Prisma.EngineOAuthProviderSettingsScalarFieldEnum[] | Prisma.EngineOAuthProviderSettingsScalarFieldEnum;
  having?: Prisma.EngineOAuthProviderSettingsScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: EngineOAuthProviderSettingsCountAggregateInputType | true;
  _min?: EngineOAuthProviderSettingsMinAggregateInputType;
  _max?: EngineOAuthProviderSettingsMaxAggregateInputType;
};

export type EngineOAuthProviderSettingsGroupByOutputType = {
  id: string;
  name: string;
  value: string;
  providerId: string;
  createdAt: Date;
  updatedAt: Date;
  _count: EngineOAuthProviderSettingsCountAggregateOutputType | null;
  _min: EngineOAuthProviderSettingsMinAggregateOutputType | null;
  _max: EngineOAuthProviderSettingsMaxAggregateOutputType | null;
};

type GetEngineOAuthProviderSettingsGroupByPayload<T extends EngineOAuthProviderSettingsGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<EngineOAuthProviderSettingsGroupByOutputType, T['by']> & {
        [P in keyof T & keyof EngineOAuthProviderSettingsGroupByOutputType]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EngineOAuthProviderSettingsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EngineOAuthProviderSettingsGroupByOutputType[P]>;
      }
    >
  >;

export type EngineOAuthProviderSettingsWhereInput = {
  AND?: Prisma.EngineOAuthProviderSettingsWhereInput | Prisma.EngineOAuthProviderSettingsWhereInput[];
  OR?: Prisma.EngineOAuthProviderSettingsWhereInput[];
  NOT?: Prisma.EngineOAuthProviderSettingsWhereInput | Prisma.EngineOAuthProviderSettingsWhereInput[];
  id?: Prisma.UuidFilter<'EngineOAuthProviderSettings'> | string;
  name?: Prisma.StringFilter<'EngineOAuthProviderSettings'> | string;
  value?: Prisma.StringFilter<'EngineOAuthProviderSettings'> | string;
  providerId?: Prisma.UuidFilter<'EngineOAuthProviderSettings'> | string;
  createdAt?: Prisma.DateTimeFilter<'EngineOAuthProviderSettings'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'EngineOAuthProviderSettings'> | Date | string;
  EngineOAuthProvider?: Prisma.XOR<
    Prisma.EngineOAuthProviderScalarRelationFilter,
    Prisma.EngineOAuthProviderWhereInput
  >;
};

export type EngineOAuthProviderSettingsOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  providerId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  EngineOAuthProvider?: Prisma.EngineOAuthProviderOrderByWithRelationInput;
};

export type EngineOAuthProviderSettingsWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    providerId_name?: Prisma.EngineOAuthProviderSettingsProviderIdNameCompoundUniqueInput;
    AND?: Prisma.EngineOAuthProviderSettingsWhereInput | Prisma.EngineOAuthProviderSettingsWhereInput[];
    OR?: Prisma.EngineOAuthProviderSettingsWhereInput[];
    NOT?: Prisma.EngineOAuthProviderSettingsWhereInput | Prisma.EngineOAuthProviderSettingsWhereInput[];
    name?: Prisma.StringFilter<'EngineOAuthProviderSettings'> | string;
    value?: Prisma.StringFilter<'EngineOAuthProviderSettings'> | string;
    providerId?: Prisma.UuidFilter<'EngineOAuthProviderSettings'> | string;
    createdAt?: Prisma.DateTimeFilter<'EngineOAuthProviderSettings'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'EngineOAuthProviderSettings'> | Date | string;
    EngineOAuthProvider?: Prisma.XOR<
      Prisma.EngineOAuthProviderScalarRelationFilter,
      Prisma.EngineOAuthProviderWhereInput
    >;
  },
  'id' | 'providerId_name'
>;

export type EngineOAuthProviderSettingsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  providerId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.EngineOAuthProviderSettingsCountOrderByAggregateInput;
  _max?: Prisma.EngineOAuthProviderSettingsMaxOrderByAggregateInput;
  _min?: Prisma.EngineOAuthProviderSettingsMinOrderByAggregateInput;
};

export type EngineOAuthProviderSettingsScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.EngineOAuthProviderSettingsScalarWhereWithAggregatesInput
    | Prisma.EngineOAuthProviderSettingsScalarWhereWithAggregatesInput[];
  OR?: Prisma.EngineOAuthProviderSettingsScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.EngineOAuthProviderSettingsScalarWhereWithAggregatesInput
    | Prisma.EngineOAuthProviderSettingsScalarWhereWithAggregatesInput[];
  id?: Prisma.UuidWithAggregatesFilter<'EngineOAuthProviderSettings'> | string;
  name?: Prisma.StringWithAggregatesFilter<'EngineOAuthProviderSettings'> | string;
  value?: Prisma.StringWithAggregatesFilter<'EngineOAuthProviderSettings'> | string;
  providerId?: Prisma.UuidWithAggregatesFilter<'EngineOAuthProviderSettings'> | string;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'EngineOAuthProviderSettings'> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'EngineOAuthProviderSettings'> | Date | string;
};

export type EngineOAuthProviderSettingsCreateInput = {
  id?: string;
  name: string;
  value: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  EngineOAuthProvider: Prisma.EngineOAuthProviderCreateNestedOneWithoutEngineOAuthProviderSettingsInput;
};

export type EngineOAuthProviderSettingsUncheckedCreateInput = {
  id?: string;
  name: string;
  value: string;
  providerId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EngineOAuthProviderSettingsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  EngineOAuthProvider?: Prisma.EngineOAuthProviderUpdateOneRequiredWithoutEngineOAuthProviderSettingsNestedInput;
};

export type EngineOAuthProviderSettingsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  providerId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EngineOAuthProviderSettingsCreateManyInput = {
  id?: string;
  name: string;
  value: string;
  providerId: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EngineOAuthProviderSettingsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EngineOAuthProviderSettingsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  providerId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EngineOAuthProviderSettingsListRelationFilter = {
  every?: Prisma.EngineOAuthProviderSettingsWhereInput;
  some?: Prisma.EngineOAuthProviderSettingsWhereInput;
  none?: Prisma.EngineOAuthProviderSettingsWhereInput;
};

export type EngineOAuthProviderSettingsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type EngineOAuthProviderSettingsProviderIdNameCompoundUniqueInput = {
  providerId: string;
  name: string;
};

export type EngineOAuthProviderSettingsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  providerId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type EngineOAuthProviderSettingsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  providerId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type EngineOAuthProviderSettingsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  providerId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type EngineOAuthProviderSettingsCreateNestedManyWithoutEngineOAuthProviderInput = {
  create?:
    | Prisma.XOR<
        Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput,
        Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput
      >
    | Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput[]
    | Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput[];
  connectOrCreate?:
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput[];
  createMany?: Prisma.EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInputEnvelope;
  connect?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
};

export type EngineOAuthProviderSettingsUncheckedCreateNestedManyWithoutEngineOAuthProviderInput = {
  create?:
    | Prisma.XOR<
        Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput,
        Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput
      >
    | Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput[]
    | Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput[];
  connectOrCreate?:
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput[];
  createMany?: Prisma.EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInputEnvelope;
  connect?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
};

export type EngineOAuthProviderSettingsUpdateManyWithoutEngineOAuthProviderNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput,
        Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput
      >
    | Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput[]
    | Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput[];
  connectOrCreate?:
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput[];
  upsert?:
    | Prisma.EngineOAuthProviderSettingsUpsertWithWhereUniqueWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsUpsertWithWhereUniqueWithoutEngineOAuthProviderInput[];
  createMany?: Prisma.EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInputEnvelope;
  set?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  disconnect?:
    | Prisma.EngineOAuthProviderSettingsWhereUniqueInput
    | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  delete?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  connect?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  update?:
    | Prisma.EngineOAuthProviderSettingsUpdateWithWhereUniqueWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsUpdateWithWhereUniqueWithoutEngineOAuthProviderInput[];
  updateMany?:
    | Prisma.EngineOAuthProviderSettingsUpdateManyWithWhereWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsUpdateManyWithWhereWithoutEngineOAuthProviderInput[];
  deleteMany?:
    | Prisma.EngineOAuthProviderSettingsScalarWhereInput
    | Prisma.EngineOAuthProviderSettingsScalarWhereInput[];
};

export type EngineOAuthProviderSettingsUncheckedUpdateManyWithoutEngineOAuthProviderNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput,
        Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput
      >
    | Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput[]
    | Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput[];
  connectOrCreate?:
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput[];
  upsert?:
    | Prisma.EngineOAuthProviderSettingsUpsertWithWhereUniqueWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsUpsertWithWhereUniqueWithoutEngineOAuthProviderInput[];
  createMany?: Prisma.EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInputEnvelope;
  set?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  disconnect?:
    | Prisma.EngineOAuthProviderSettingsWhereUniqueInput
    | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  delete?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  connect?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput | Prisma.EngineOAuthProviderSettingsWhereUniqueInput[];
  update?:
    | Prisma.EngineOAuthProviderSettingsUpdateWithWhereUniqueWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsUpdateWithWhereUniqueWithoutEngineOAuthProviderInput[];
  updateMany?:
    | Prisma.EngineOAuthProviderSettingsUpdateManyWithWhereWithoutEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsUpdateManyWithWhereWithoutEngineOAuthProviderInput[];
  deleteMany?:
    | Prisma.EngineOAuthProviderSettingsScalarWhereInput
    | Prisma.EngineOAuthProviderSettingsScalarWhereInput[];
};

export type EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput = {
  id?: string;
  name: string;
  value: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput = {
  id?: string;
  name: string;
  value: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EngineOAuthProviderSettingsCreateOrConnectWithoutEngineOAuthProviderInput = {
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput,
    Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput
  >;
};

export type EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInputEnvelope = {
  data:
    | Prisma.EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInput
    | Prisma.EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInput[];
  skipDuplicates?: boolean;
};

export type EngineOAuthProviderSettingsUpsertWithWhereUniqueWithoutEngineOAuthProviderInput = {
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsUpdateWithoutEngineOAuthProviderInput,
    Prisma.EngineOAuthProviderSettingsUncheckedUpdateWithoutEngineOAuthProviderInput
  >;
  create: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsCreateWithoutEngineOAuthProviderInput,
    Prisma.EngineOAuthProviderSettingsUncheckedCreateWithoutEngineOAuthProviderInput
  >;
};

export type EngineOAuthProviderSettingsUpdateWithWhereUniqueWithoutEngineOAuthProviderInput = {
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsUpdateWithoutEngineOAuthProviderInput,
    Prisma.EngineOAuthProviderSettingsUncheckedUpdateWithoutEngineOAuthProviderInput
  >;
};

export type EngineOAuthProviderSettingsUpdateManyWithWhereWithoutEngineOAuthProviderInput = {
  where: Prisma.EngineOAuthProviderSettingsScalarWhereInput;
  data: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsUpdateManyMutationInput,
    Prisma.EngineOAuthProviderSettingsUncheckedUpdateManyWithoutEngineOAuthProviderInput
  >;
};

export type EngineOAuthProviderSettingsScalarWhereInput = {
  AND?: Prisma.EngineOAuthProviderSettingsScalarWhereInput | Prisma.EngineOAuthProviderSettingsScalarWhereInput[];
  OR?: Prisma.EngineOAuthProviderSettingsScalarWhereInput[];
  NOT?: Prisma.EngineOAuthProviderSettingsScalarWhereInput | Prisma.EngineOAuthProviderSettingsScalarWhereInput[];
  id?: Prisma.UuidFilter<'EngineOAuthProviderSettings'> | string;
  name?: Prisma.StringFilter<'EngineOAuthProviderSettings'> | string;
  value?: Prisma.StringFilter<'EngineOAuthProviderSettings'> | string;
  providerId?: Prisma.UuidFilter<'EngineOAuthProviderSettings'> | string;
  createdAt?: Prisma.DateTimeFilter<'EngineOAuthProviderSettings'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'EngineOAuthProviderSettings'> | Date | string;
};

export type EngineOAuthProviderSettingsCreateManyEngineOAuthProviderInput = {
  id?: string;
  name: string;
  value: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EngineOAuthProviderSettingsUpdateWithoutEngineOAuthProviderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EngineOAuthProviderSettingsUncheckedUpdateWithoutEngineOAuthProviderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EngineOAuthProviderSettingsUncheckedUpdateManyWithoutEngineOAuthProviderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EngineOAuthProviderSettingsSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    value?: boolean;
    providerId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    EngineOAuthProvider?: boolean | Prisma.EngineOAuthProviderDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['engineOAuthProviderSettings']
>;

export type EngineOAuthProviderSettingsSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    value?: boolean;
    providerId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    EngineOAuthProvider?: boolean | Prisma.EngineOAuthProviderDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['engineOAuthProviderSettings']
>;

export type EngineOAuthProviderSettingsSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    value?: boolean;
    providerId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    EngineOAuthProvider?: boolean | Prisma.EngineOAuthProviderDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['engineOAuthProviderSettings']
>;

export type EngineOAuthProviderSettingsSelectScalar = {
  id?: boolean;
  name?: boolean;
  value?: boolean;
  providerId?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type EngineOAuthProviderSettingsOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  'id' | 'name' | 'value' | 'providerId' | 'createdAt' | 'updatedAt',
  ExtArgs['result']['engineOAuthProviderSettings']
>;
export type EngineOAuthProviderSettingsInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  EngineOAuthProvider?: boolean | Prisma.EngineOAuthProviderDefaultArgs<ExtArgs>;
};
export type EngineOAuthProviderSettingsIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  EngineOAuthProvider?: boolean | Prisma.EngineOAuthProviderDefaultArgs<ExtArgs>;
};
export type EngineOAuthProviderSettingsIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  EngineOAuthProvider?: boolean | Prisma.EngineOAuthProviderDefaultArgs<ExtArgs>;
};

export type $EngineOAuthProviderSettingsPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'EngineOAuthProviderSettings';
  objects: {
    EngineOAuthProvider: Prisma.$EngineOAuthProviderPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      /**
       * @DtoCreateHidden
       */
      id: string;
      name: string;
      value: string;
      providerId: string;
      /**
       * @DtoCreateHidden
       * @DtoUpdateHidden
       */
      createdAt: Date;
      /**
       * @DtoCreateHidden
       * @DtoUpdateHidden
       */
      updatedAt: Date;
    },
    ExtArgs['result']['engineOAuthProviderSettings']
  >;
  composites: {};
};

export type EngineOAuthProviderSettingsGetPayload<
  S extends boolean | null | undefined | EngineOAuthProviderSettingsDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$EngineOAuthProviderSettingsPayload, S>;

export type EngineOAuthProviderSettingsCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<EngineOAuthProviderSettingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: EngineOAuthProviderSettingsCountAggregateInputType | true;
};

export interface EngineOAuthProviderSettingsDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['EngineOAuthProviderSettings'];
    meta: { name: 'EngineOAuthProviderSettings' };
  };
  /**
   * Find zero or one EngineOAuthProviderSettings that matches the filter.
   * @param {EngineOAuthProviderSettingsFindUniqueArgs} args - Arguments to find a EngineOAuthProviderSettings
   * @example
   * // Get one EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EngineOAuthProviderSettingsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one EngineOAuthProviderSettings that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EngineOAuthProviderSettingsFindUniqueOrThrowArgs} args - Arguments to find a EngineOAuthProviderSettings
   * @example
   * // Get one EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EngineOAuthProviderSettingsFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EngineOAuthProviderSettings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EngineOAuthProviderSettingsFindFirstArgs} args - Arguments to find a EngineOAuthProviderSettings
   * @example
   * // Get one EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EngineOAuthProviderSettingsFindFirstArgs>(
    args?: Prisma.SelectSubset<T, EngineOAuthProviderSettingsFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EngineOAuthProviderSettings that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EngineOAuthProviderSettingsFindFirstOrThrowArgs} args - Arguments to find a EngineOAuthProviderSettings
   * @example
   * // Get one EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EngineOAuthProviderSettingsFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, EngineOAuthProviderSettingsFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more EngineOAuthProviderSettings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EngineOAuthProviderSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.findMany()
   *
   * // Get first 10 EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const engineOAuthProviderSettingsWithIdOnly = await prisma.engineOAuthProviderSettings.findMany({ select: { id: true } })
   *
   */
  findMany<T extends EngineOAuthProviderSettingsFindManyArgs>(
    args?: Prisma.SelectSubset<T, EngineOAuthProviderSettingsFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a EngineOAuthProviderSettings.
   * @param {EngineOAuthProviderSettingsCreateArgs} args - Arguments to create a EngineOAuthProviderSettings.
   * @example
   * // Create one EngineOAuthProviderSettings
   * const EngineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.create({
   *   data: {
   *     // ... data to create a EngineOAuthProviderSettings
   *   }
   * })
   *
   */
  create<T extends EngineOAuthProviderSettingsCreateArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>, T, 'create', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many EngineOAuthProviderSettings.
   * @param {EngineOAuthProviderSettingsCreateManyArgs} args - Arguments to create many EngineOAuthProviderSettings.
   * @example
   * // Create many EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends EngineOAuthProviderSettingsCreateManyArgs>(
    args?: Prisma.SelectSubset<T, EngineOAuthProviderSettingsCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many EngineOAuthProviderSettings and returns the data saved in the database.
   * @param {EngineOAuthProviderSettingsCreateManyAndReturnArgs} args - Arguments to create many EngineOAuthProviderSettings.
   * @example
   * // Create many EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many EngineOAuthProviderSettings and only return the `id`
   * const engineOAuthProviderSettingsWithIdOnly = await prisma.engineOAuthProviderSettings.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends EngineOAuthProviderSettingsCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, EngineOAuthProviderSettingsCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a EngineOAuthProviderSettings.
   * @param {EngineOAuthProviderSettingsDeleteArgs} args - Arguments to delete one EngineOAuthProviderSettings.
   * @example
   * // Delete one EngineOAuthProviderSettings
   * const EngineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.delete({
   *   where: {
   *     // ... filter to delete one EngineOAuthProviderSettings
   *   }
   * })
   *
   */
  delete<T extends EngineOAuthProviderSettingsDeleteArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>, T, 'delete', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one EngineOAuthProviderSettings.
   * @param {EngineOAuthProviderSettingsUpdateArgs} args - Arguments to update one EngineOAuthProviderSettings.
   * @example
   * // Update one EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends EngineOAuthProviderSettingsUpdateArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>, T, 'update', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more EngineOAuthProviderSettings.
   * @param {EngineOAuthProviderSettingsDeleteManyArgs} args - Arguments to filter EngineOAuthProviderSettings to delete.
   * @example
   * // Delete a few EngineOAuthProviderSettings
   * const { count } = await prisma.engineOAuthProviderSettings.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends EngineOAuthProviderSettingsDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, EngineOAuthProviderSettingsDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EngineOAuthProviderSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EngineOAuthProviderSettingsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends EngineOAuthProviderSettingsUpdateManyArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EngineOAuthProviderSettings and returns the data updated in the database.
   * @param {EngineOAuthProviderSettingsUpdateManyAndReturnArgs} args - Arguments to update many EngineOAuthProviderSettings.
   * @example
   * // Update many EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more EngineOAuthProviderSettings and only return the `id`
   * const engineOAuthProviderSettingsWithIdOnly = await prisma.engineOAuthProviderSettings.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends EngineOAuthProviderSettingsUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one EngineOAuthProviderSettings.
   * @param {EngineOAuthProviderSettingsUpsertArgs} args - Arguments to update or create a EngineOAuthProviderSettings.
   * @example
   * // Update or create a EngineOAuthProviderSettings
   * const engineOAuthProviderSettings = await prisma.engineOAuthProviderSettings.upsert({
   *   create: {
   *     // ... data to create a EngineOAuthProviderSettings
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EngineOAuthProviderSettings we want to update
   *   }
   * })
   */
  upsert<T extends EngineOAuthProviderSettingsUpsertArgs>(
    args: Prisma.SelectSubset<T, EngineOAuthProviderSettingsUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$EngineOAuthProviderSettingsPayload<ExtArgs>, T, 'upsert', GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of EngineOAuthProviderSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EngineOAuthProviderSettingsCountArgs} args - Arguments to filter EngineOAuthProviderSettings to count.
   * @example
   * // Count the number of EngineOAuthProviderSettings
   * const count = await prisma.engineOAuthProviderSettings.count({
   *   where: {
   *     // ... the filter for the EngineOAuthProviderSettings we want to count
   *   }
   * })
   **/
  count<T extends EngineOAuthProviderSettingsCountArgs>(
    args?: Prisma.Subset<T, EngineOAuthProviderSettingsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EngineOAuthProviderSettingsCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a EngineOAuthProviderSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EngineOAuthProviderSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends EngineOAuthProviderSettingsAggregateArgs>(
    args: Prisma.Subset<T, EngineOAuthProviderSettingsAggregateArgs>,
  ): Prisma.PrismaPromise<GetEngineOAuthProviderSettingsAggregateType<T>>;

  /**
   * Group by EngineOAuthProviderSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EngineOAuthProviderSettingsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends EngineOAuthProviderSettingsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<Prisma.Extends<'skip', Prisma.Keys<T>>, Prisma.Extends<'take', Prisma.Keys<T>>>,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EngineOAuthProviderSettingsGroupByArgs['orderBy'] }
      : { orderBy?: EngineOAuthProviderSettingsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [Error, 'Field ', P, ` in "having" needs to be provided in "by"`];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, EngineOAuthProviderSettingsGroupByArgs, OrderByArg> & InputErrors,
  ): {} extends InputErrors ? GetEngineOAuthProviderSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the EngineOAuthProviderSettings model
   */
  readonly fields: EngineOAuthProviderSettingsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EngineOAuthProviderSettings.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EngineOAuthProviderSettingsClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  EngineOAuthProvider<T extends Prisma.EngineOAuthProviderDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.EngineOAuthProviderDefaultArgs<ExtArgs>>,
  ): Prisma.Prisma__EngineOAuthProviderClient<
    | runtime.Types.Result.GetResult<
        Prisma.$EngineOAuthProviderPayload<ExtArgs>,
        T,
        'findUniqueOrThrow',
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the EngineOAuthProviderSettings model
 */
export interface EngineOAuthProviderSettingsFieldRefs {
  readonly id: Prisma.FieldRef<'EngineOAuthProviderSettings', 'String'>;
  readonly name: Prisma.FieldRef<'EngineOAuthProviderSettings', 'String'>;
  readonly value: Prisma.FieldRef<'EngineOAuthProviderSettings', 'String'>;
  readonly providerId: Prisma.FieldRef<'EngineOAuthProviderSettings', 'String'>;
  readonly createdAt: Prisma.FieldRef<'EngineOAuthProviderSettings', 'DateTime'>;
  readonly updatedAt: Prisma.FieldRef<'EngineOAuthProviderSettings', 'DateTime'>;
}

// Custom InputTypes
/**
 * EngineOAuthProviderSettings findUnique
 */
export type EngineOAuthProviderSettingsFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which EngineOAuthProviderSettings to fetch.
   */
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
};

/**
 * EngineOAuthProviderSettings findUniqueOrThrow
 */
export type EngineOAuthProviderSettingsFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which EngineOAuthProviderSettings to fetch.
   */
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
};

/**
 * EngineOAuthProviderSettings findFirst
 */
export type EngineOAuthProviderSettingsFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which EngineOAuthProviderSettings to fetch.
   */
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EngineOAuthProviderSettings to fetch.
   */
  orderBy?:
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EngineOAuthProviderSettings.
   */
  cursor?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EngineOAuthProviderSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EngineOAuthProviderSettings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EngineOAuthProviderSettings.
   */
  distinct?: Prisma.EngineOAuthProviderSettingsScalarFieldEnum | Prisma.EngineOAuthProviderSettingsScalarFieldEnum[];
};

/**
 * EngineOAuthProviderSettings findFirstOrThrow
 */
export type EngineOAuthProviderSettingsFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which EngineOAuthProviderSettings to fetch.
   */
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EngineOAuthProviderSettings to fetch.
   */
  orderBy?:
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EngineOAuthProviderSettings.
   */
  cursor?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EngineOAuthProviderSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EngineOAuthProviderSettings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EngineOAuthProviderSettings.
   */
  distinct?: Prisma.EngineOAuthProviderSettingsScalarFieldEnum | Prisma.EngineOAuthProviderSettingsScalarFieldEnum[];
};

/**
 * EngineOAuthProviderSettings findMany
 */
export type EngineOAuthProviderSettingsFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which EngineOAuthProviderSettings to fetch.
   */
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EngineOAuthProviderSettings to fetch.
   */
  orderBy?:
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput
    | Prisma.EngineOAuthProviderSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing EngineOAuthProviderSettings.
   */
  cursor?: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EngineOAuthProviderSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EngineOAuthProviderSettings.
   */
  skip?: number;
  distinct?: Prisma.EngineOAuthProviderSettingsScalarFieldEnum | Prisma.EngineOAuthProviderSettingsScalarFieldEnum[];
};

/**
 * EngineOAuthProviderSettings create
 */
export type EngineOAuthProviderSettingsCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * The data needed to create a EngineOAuthProviderSettings.
   */
  data: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsCreateInput,
    Prisma.EngineOAuthProviderSettingsUncheckedCreateInput
  >;
};

/**
 * EngineOAuthProviderSettings createMany
 */
export type EngineOAuthProviderSettingsCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many EngineOAuthProviderSettings.
   */
  data: Prisma.EngineOAuthProviderSettingsCreateManyInput | Prisma.EngineOAuthProviderSettingsCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * EngineOAuthProviderSettings createManyAndReturn
 */
export type EngineOAuthProviderSettingsCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * The data used to create many EngineOAuthProviderSettings.
   */
  data: Prisma.EngineOAuthProviderSettingsCreateManyInput | Prisma.EngineOAuthProviderSettingsCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * EngineOAuthProviderSettings update
 */
export type EngineOAuthProviderSettingsUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * The data needed to update a EngineOAuthProviderSettings.
   */
  data: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsUpdateInput,
    Prisma.EngineOAuthProviderSettingsUncheckedUpdateInput
  >;
  /**
   * Choose, which EngineOAuthProviderSettings to update.
   */
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
};

/**
 * EngineOAuthProviderSettings updateMany
 */
export type EngineOAuthProviderSettingsUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update EngineOAuthProviderSettings.
   */
  data: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsUpdateManyMutationInput,
    Prisma.EngineOAuthProviderSettingsUncheckedUpdateManyInput
  >;
  /**
   * Filter which EngineOAuthProviderSettings to update
   */
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  /**
   * Limit how many EngineOAuthProviderSettings to update.
   */
  limit?: number;
};

/**
 * EngineOAuthProviderSettings updateManyAndReturn
 */
export type EngineOAuthProviderSettingsUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * The data used to update EngineOAuthProviderSettings.
   */
  data: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsUpdateManyMutationInput,
    Prisma.EngineOAuthProviderSettingsUncheckedUpdateManyInput
  >;
  /**
   * Filter which EngineOAuthProviderSettings to update
   */
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  /**
   * Limit how many EngineOAuthProviderSettings to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * EngineOAuthProviderSettings upsert
 */
export type EngineOAuthProviderSettingsUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * The filter to search for the EngineOAuthProviderSettings to update in case it exists.
   */
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
  /**
   * In case the EngineOAuthProviderSettings found by the `where` argument doesn't exist, create a new EngineOAuthProviderSettings with this data.
   */
  create: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsCreateInput,
    Prisma.EngineOAuthProviderSettingsUncheckedCreateInput
  >;
  /**
   * In case the EngineOAuthProviderSettings was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.EngineOAuthProviderSettingsUpdateInput,
    Prisma.EngineOAuthProviderSettingsUncheckedUpdateInput
  >;
};

/**
 * EngineOAuthProviderSettings delete
 */
export type EngineOAuthProviderSettingsDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
  /**
   * Filter which EngineOAuthProviderSettings to delete.
   */
  where: Prisma.EngineOAuthProviderSettingsWhereUniqueInput;
};

/**
 * EngineOAuthProviderSettings deleteMany
 */
export type EngineOAuthProviderSettingsDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which EngineOAuthProviderSettings to delete
   */
  where?: Prisma.EngineOAuthProviderSettingsWhereInput;
  /**
   * Limit how many EngineOAuthProviderSettings to delete.
   */
  limit?: number;
};

/**
 * EngineOAuthProviderSettings without action
 */
export type EngineOAuthProviderSettingsDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EngineOAuthProviderSettings
   */
  select?: Prisma.EngineOAuthProviderSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EngineOAuthProviderSettings
   */
  omit?: Prisma.EngineOAuthProviderSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EngineOAuthProviderSettingsInclude<ExtArgs> | null;
};
