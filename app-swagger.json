{
  "openapi": "3.0.0",
  "paths": {
    "/api/health": {
      "get": {
        "operationId": "TerminusHealthCheckController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "ok" },
                    "info": {
                      "type": "object",
                      "example": { "database": { "status": "up" } },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": { "database": { "status": "up" } },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "info": {
                      "type": "object",
                      "example": { "database": { "status": "up" } },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": { "redis": { "status": "down", "message": "Could not connect" } },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": { "status": "up" },
                        "redis": { "status": "down", "message": "Could not connect" }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": ["status"],
                        "properties": { "status": { "type": "string" } },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["TerminusHealthCheck"]
      }
    },
    "/api/files/get-presigned-url": {
      "get": {
        "operationId": "FilesController_getPresignedUrl",
        "parameters": [{ "name": "ext", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FilesPresignedUrls" } } }
          }
        },
        "tags": ["Files"]
      }
    },
    "/api/files/delete-file": {
      "post": {
        "operationId": "FilesController_deleteFile",
        "parameters": [{ "name": "downloadUrl", "required": true, "in": "query", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          }
        },
        "tags": ["Files"]
      }
    },
    "/api/notifications": {
      "get": {
        "operationId": "NotificationsController_findMany",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyNotificationResponse" } }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/NotificationsError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Notifications"]
      }
    },
    "/api/notifications/{id}": {
      "put": {
        "operationId": "NotificationsController_updateOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateNotificationsEventDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotificationsEventDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/NotificationsError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Notifications"]
      },
      "get": {
        "operationId": "NotificationsController_findOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NotificationsEventDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/NotificationsError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Notifications"]
      }
    },
    "/api/webhook/logs": {
      "get": {
        "operationId": "WebhookLogsController_findManyLogs",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "webhookId", "required": true, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyWebhookLogResponse" } }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/api/webhook/logs/{id}": {
      "delete": {
        "operationId": "WebhookLogsController_deleteOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      },
      "get": {
        "operationId": "WebhookLogsController_findOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WebhookLog" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/api/webhook/profile": {
      "get": {
        "operationId": "WebhookController_profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WebhookUser" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/api/webhook/events": {
      "get": {
        "operationId": "WebhookController_events",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/WebhookEvent" } }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/api/webhook": {
      "get": {
        "operationId": "WebhookController_findMany",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FindManyWebhookResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      },
      "post": {
        "operationId": "WebhookController_createOne",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateWebhookDto" } } }
        },
        "responses": {
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Webhook" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/api/webhook/test-request": {
      "post": {
        "operationId": "WebhookController_testRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateWebhookDto" } } }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/WebhookTestRequestResponse" } }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/api/webhook/{id}": {
      "put": {
        "operationId": "WebhookController_updateOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateWebhookDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Webhook" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      },
      "delete": {
        "operationId": "WebhookController_deleteOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      },
      "get": {
        "operationId": "WebhookController_findOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Webhook" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/WebhookError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Webhook"]
      }
    },
    "/api/engine/sign-in": {
      "post": {
        "operationId": "EngineController_signIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignInArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokensResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/sign-up": {
      "post": {
        "operationId": "EngineController_signUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignUpArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokensResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/complete-sign-up": {
      "post": {
        "operationId": "EngineController_completeSignUp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CompleteSignUpArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokensResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/sign-out": {
      "post": {
        "operationId": "EngineController_signOut",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignOutArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/forgot-password": {
      "post": {
        "operationId": "EngineController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ForgotPasswordArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/complete-forgot-password": {
      "post": {
        "operationId": "EngineController_completeForgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CompleteForgotPasswordArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokensResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/refresh-tokens": {
      "post": {
        "operationId": "EngineController_refreshTokens",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RefreshTokensResponse" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokensResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/profile": {
      "get": {
        "operationId": "EngineController_profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineUserDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      },
      "put": {
        "operationId": "EngineController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateProfileArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineUserDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/users": {
      "get": {
        "operationId": "EngineUsersController_findMany",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "projectId", "required": false, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyEngineUserResponse" } }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/users/{id}": {
      "put": {
        "operationId": "EngineUsersController_updateOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateEngineUserDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineUserDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      },
      "get": {
        "operationId": "EngineUsersController_findOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineUserDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/users/send-invitation-links": {
      "post": {
        "operationId": "EngineUsersController_sendInvitationLinks",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SendInvitationLinksArgs" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/projects": {
      "get": {
        "operationId": "EngineProjectsController_findMany",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyEngineProjectResponse" } }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      },
      "post": {
        "operationId": "EngineProjectsController_createOne",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateEngineProjectDto" } } }
        },
        "responses": {
          "201": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineProjectDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/projects/{id}": {
      "put": {
        "operationId": "EngineProjectsController_updateOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateEngineProjectDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineProjectDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      },
      "delete": {
        "operationId": "EngineProjectsController_deleteOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StatusResponse" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      },
      "get": {
        "operationId": "EngineProjectsController_findOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineProjectDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/sessions": {
      "get": {
        "operationId": "EngineRefreshSessionsController_findMany",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "userId", "required": true, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyEngineRefreshSessionResponse" } }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/sessions/{id}": {
      "put": {
        "operationId": "EngineRefreshSessionsController_updateOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateEngineRefreshSessionDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineRefreshSessionDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      },
      "get": {
        "operationId": "EngineRefreshSessionsController_findOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineRefreshSessionDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/roles": {
      "get": {
        "operationId": "EngineRolesController_findMany",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyEngineRoleResponse" } }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/public-projects": {
      "get": {
        "operationId": "EnginePublicProjectsController_findMany",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyEnginePublicProjectResponse" } }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/email-templates": {
      "get": {
        "operationId": "EngineEmailTemplatesController_findMany",
        "parameters": [
          { "name": "curPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "perPage", "required": false, "in": "query", "schema": { "type": "number" } },
          { "name": "searchText", "required": false, "in": "query", "schema": { "type": "string" } },
          { "name": "sort", "required": false, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/FindManyEngineEmailTemplateResponse" } }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/email-templates/{id}": {
      "put": {
        "operationId": "EngineEmailTemplatesController_updateOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdateEngineEmailTemplateDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineEmailTemplateDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      },
      "get": {
        "operationId": "EngineEmailTemplatesController_findOne",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EngineEmailTemplateDto" } } }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/EngineError" },
                    { "$ref": "#/components/schemas/ValidationError" }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/oauth/providers": {
      "get": {
        "operationId": "EngineOAuthController_oauthProviders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/OAuthProvider" } }
              }
            }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/oauth/verification": {
      "post": {
        "operationId": "EngineOAuthController_oauthVerification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/EngineOAuthVerificationArgs" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokensResponse" } } }
          }
        },
        "tags": ["Engine"]
      }
    },
    "/api/engine/oauth/google": {
      "get": {
        "operationId": "EngineGoogleOAuthController_googleAuth",
        "parameters": [
          { "name": "redirect_uri", "required": true, "in": "query", "schema": { "type": "string" } },
          { "name": "client_id", "required": true, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Engine"]
      }
    },
    "/api/engine/oauth/google/redirect": {
      "get": {
        "operationId": "EngineGoogleOAuthController_googleAuthRedirect",
        "parameters": [
          { "name": "redirect_uri", "required": true, "in": "query", "schema": { "type": "string" } },
          { "name": "client_id", "required": true, "in": "query", "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Engine"]
      }
    },
    "/api/time": {
      "get": {
        "operationId": "TimeController_time",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Date" } } }
          }
        },
        "tags": ["Time"]
      }
    }
  },
  "info": { "title": "", "description": "", "version": "1.0.0", "contact": {} },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": { "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" } },
    "schemas": {
      "FilesPresignedUrls": {
        "type": "object",
        "properties": { "downloadUrl": { "type": "string" }, "uploadUrl": { "type": "string" } },
        "required": ["downloadUrl", "uploadUrl"]
      },
      "StatusResponse": {
        "type": "object",
        "properties": { "message": { "type": "string" } },
        "required": ["message"]
      },
      "NotificationsUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "externalTenantId": { "type": "string" },
          "externalUserId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "NotificationsEvent_NotificationsEvent_recipientUserIdToNotificationsUser": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NotificationsEvent" }
          },
          "NotificationsEvent_NotificationsEvent_senderUserIdToNotificationsUser": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NotificationsEvent" }
          }
        },
        "required": ["id", "externalTenantId", "externalUserId", "createdAt", "updatedAt"]
      },
      "NotificationsEvent": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "operationName": { "type": "string" },
          "subject": { "type": "string" },
          "html": { "type": "string" },
          "text": { "type": "string", "nullable": true },
          "attempt": { "type": "integer", "format": "int32" },
          "used": { "type": "boolean" },
          "error": { "type": "object", "nullable": true },
          "senderUserId": { "type": "string", "nullable": true },
          "senderData": { "type": "object", "nullable": true },
          "recipientGroupId": { "type": "string" },
          "recipientUserId": { "type": "string" },
          "recipientData": { "type": "object", "nullable": true },
          "externalTenantId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "NotificationsUser_NotificationsEvent_recipientUserIdToNotificationsUser": {
            "$ref": "#/components/schemas/NotificationsUser"
          },
          "NotificationsUser_NotificationsEvent_senderUserIdToNotificationsUser": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/NotificationsUser" }]
          }
        },
        "required": [
          "id",
          "type",
          "operationName",
          "subject",
          "html",
          "text",
          "attempt",
          "used",
          "error",
          "senderUserId",
          "senderData",
          "recipientGroupId",
          "recipientUserId",
          "recipientData",
          "externalTenantId",
          "createdAt",
          "updatedAt"
        ]
      },
      "FindManyResponseMeta": {
        "type": "object",
        "properties": {
          "curPage": { "type": "number" },
          "perPage": { "type": "number" },
          "totalResults": { "type": "number" }
        },
        "required": ["totalResults"]
      },
      "FindManyNotificationResponse": {
        "type": "object",
        "properties": {
          "notifications": { "type": "array", "items": { "$ref": "#/components/schemas/NotificationsEvent" } },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["notifications", "meta"]
      },
      "UpdateNotificationsEventDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "operationName": { "type": "string" },
          "subject": { "type": "string" },
          "html": { "type": "string" },
          "text": { "type": "string", "nullable": true },
          "attempt": { "type": "integer", "format": "int32" },
          "used": { "type": "boolean" },
          "error": { "type": "object", "nullable": true },
          "senderData": { "type": "object", "nullable": true },
          "recipientGroupId": { "type": "string" },
          "recipientData": { "type": "object", "nullable": true },
          "externalTenantId": { "type": "string" }
        }
      },
      "NotificationsEventDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "operationName": { "type": "string" },
          "subject": { "type": "string" },
          "html": { "type": "string" },
          "text": { "type": "string", "nullable": true },
          "attempt": { "type": "integer", "format": "int32" },
          "used": { "type": "boolean" },
          "error": { "type": "object", "nullable": true },
          "senderData": { "type": "object", "nullable": true },
          "recipientGroupId": { "type": "string" },
          "recipientData": { "type": "object", "nullable": true },
          "externalTenantId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": [
          "id",
          "type",
          "operationName",
          "subject",
          "html",
          "text",
          "attempt",
          "used",
          "error",
          "senderData",
          "recipientGroupId",
          "recipientData",
          "externalTenantId",
          "createdAt",
          "updatedAt"
        ]
      },
      "WebhookStatus": { "type": "string", "enum": ["Pending", "Process", "Success", "Error", "Timeout"] },
      "WebhookRole": { "type": "string", "enum": ["Admin", "User"] },
      "WebhookUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "externalTenantId": { "type": "string" },
          "externalUserId": { "type": "string" },
          "userRole": { "allOf": [{ "$ref": "#/components/schemas/WebhookRole" }] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "Webhook_Webhook_createdByToWebhookUser": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Webhook" }
          },
          "Webhook_Webhook_updatedByToWebhookUser": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Webhook" }
          }
        },
        "required": ["id", "externalTenantId", "externalUserId", "userRole", "createdAt", "updatedAt"]
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "eventName": { "type": "string" },
          "endpoint": { "type": "string" },
          "enabled": { "type": "boolean" },
          "headers": { "type": "object", "nullable": true },
          "requestTimeout": { "type": "integer", "format": "int32", "nullable": true },
          "externalTenantId": { "type": "string" },
          "createdBy": { "type": "string" },
          "updatedBy": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "workUntilDate": { "type": "string", "format": "date-time", "nullable": true },
          "WebhookUser_Webhook_createdByToWebhookUser": { "$ref": "#/components/schemas/WebhookUser" },
          "WebhookUser_Webhook_updatedByToWebhookUser": { "$ref": "#/components/schemas/WebhookUser" },
          "WebhookLog": { "type": "array", "items": { "$ref": "#/components/schemas/WebhookLog" } }
        },
        "required": [
          "id",
          "eventName",
          "endpoint",
          "enabled",
          "headers",
          "requestTimeout",
          "externalTenantId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "workUntilDate"
        ]
      },
      "WebhookLog": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "request": { "type": "object" },
          "responseStatus": { "type": "string" },
          "response": { "type": "object", "nullable": true },
          "webhookStatus": { "allOf": [{ "$ref": "#/components/schemas/WebhookStatus" }] },
          "webhookId": { "type": "string" },
          "externalTenantId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "Webhook": { "$ref": "#/components/schemas/Webhook" }
        },
        "required": [
          "id",
          "request",
          "responseStatus",
          "response",
          "webhookStatus",
          "webhookId",
          "externalTenantId",
          "createdAt",
          "updatedAt"
        ]
      },
      "FindManyWebhookLogResponse": {
        "type": "object",
        "properties": {
          "webhookLogs": { "type": "array", "items": { "$ref": "#/components/schemas/WebhookLog" } },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["webhookLogs", "meta"]
      },
      "WebhookEvent": {
        "type": "object",
        "properties": {
          "eventName": { "type": "string" },
          "description": { "type": "string" },
          "example": { "type": "object" }
        },
        "required": ["eventName", "description", "example"]
      },
      "FindManyWebhookResponse": {
        "type": "object",
        "properties": {
          "webhooks": { "type": "array", "items": { "$ref": "#/components/schemas/Webhook" } },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["webhooks", "meta"]
      },
      "CreateWebhookDto": {
        "type": "object",
        "properties": {
          "eventName": { "type": "string" },
          "endpoint": { "type": "string" },
          "enabled": { "type": "boolean" },
          "headers": { "type": "object", "nullable": true },
          "requestTimeout": { "type": "integer", "format": "int32", "nullable": true },
          "workUntilDate": { "type": "string", "format": "date-time", "nullable": true }
        },
        "required": ["eventName", "endpoint", "enabled"]
      },
      "WebhookTestRequestResponse": {
        "type": "object",
        "properties": {
          "request": { "type": "object" },
          "responseStatus": { "type": "string" },
          "response": { "type": "object", "nullable": true },
          "webhookStatus": { "allOf": [{ "$ref": "#/components/schemas/WebhookStatus" }] }
        },
        "required": ["request", "responseStatus", "response", "webhookStatus"]
      },
      "UpdateWebhookDto": {
        "type": "object",
        "properties": {
          "eventName": { "type": "string" },
          "endpoint": { "type": "string" },
          "enabled": { "type": "boolean" },
          "headers": { "type": "object", "nullable": true },
          "requestTimeout": { "type": "integer", "format": "int32", "nullable": true },
          "workUntilDate": { "type": "string", "format": "date-time", "nullable": true }
        }
      },
      "SignInArgs": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" },
          "fingerprint": { "type": "string" }
        },
        "required": ["email", "password", "fingerprint"]
      },
      "EngineEmailTemplate": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "subject": { "type": "string" },
          "subjectLocale": { "type": "object", "nullable": true },
          "text": { "type": "string" },
          "textLocale": { "type": "object", "nullable": true },
          "html": { "type": "string" },
          "htmlLocale": { "type": "object", "nullable": true },
          "operationName": { "type": "string", "nullable": true },
          "projectId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "EngineProject": { "$ref": "#/components/schemas/EngineProject" }
        },
        "required": [
          "id",
          "subject",
          "subjectLocale",
          "text",
          "textLocale",
          "html",
          "htmlLocale",
          "operationName",
          "projectId",
          "createdAt",
          "updatedAt"
        ]
      },
      "EngineRefreshSession": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userAgent": { "type": "string", "nullable": true },
          "userIp": { "type": "string", "nullable": true },
          "expiresAt": { "type": "string", "format": "date-time", "nullable": true },
          "userData": { "type": "object", "nullable": true },
          "enabled": { "type": "boolean" },
          "userId": { "type": "string" },
          "projectId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "EngineProject": { "$ref": "#/components/schemas/EngineProject" },
          "EngineUser": { "$ref": "#/components/schemas/EngineUser" }
        },
        "required": [
          "id",
          "userAgent",
          "userIp",
          "expiresAt",
          "userData",
          "enabled",
          "userId",
          "projectId",
          "createdAt",
          "updatedAt"
        ]
      },
      "EngineProject": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "nameLocale": { "type": "object", "nullable": true },
          "clientId": { "type": "string" },
          "clientSecret": { "type": "string" },
          "public": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "EngineEmailTemplate": { "type": "array", "items": { "$ref": "#/components/schemas/EngineEmailTemplate" } },
          "EngineOAuthToken_EngineOAuthToken_projectIdToEngineOAuthProvider": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EngineOAuthToken" }
          },
          "EngineRefreshSession": { "type": "array", "items": { "$ref": "#/components/schemas/EngineRefreshSession" } },
          "EngineUser": { "type": "array", "items": { "$ref": "#/components/schemas/EngineUser" } }
        },
        "required": ["id", "name", "nameLocale", "clientId", "clientSecret", "public", "createdAt", "updatedAt"]
      },
      "EngineOAuthProviderSettings": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "value": { "type": "string" },
          "providerId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "EngineOAuthProvider": { "$ref": "#/components/schemas/EngineOAuthProvider" }
        },
        "required": ["id", "name", "value", "providerId", "createdAt", "updatedAt"]
      },
      "EngineOAuthProvider": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "EngineOAuthProviderSettings": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EngineOAuthProviderSettings" }
          },
          "EngineOAuthToken": { "type": "array", "items": { "$ref": "#/components/schemas/EngineOAuthToken" } }
        },
        "required": ["id", "name", "createdAt", "updatedAt"]
      },
      "EngineOAuthToken": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "grantedAt": { "type": "string", "format": "date-time" },
          "expiresAt": { "type": "string", "format": "date-time", "nullable": true },
          "tokenType": { "type": "string", "nullable": true },
          "scope": { "type": "string", "nullable": true },
          "verificationCode": { "type": "string", "nullable": true },
          "userId": { "type": "string" },
          "projectId": { "type": "string" },
          "providerId": { "type": "string" },
          "providerUserId": { "type": "string" },
          "providerUserData": { "type": "object", "nullable": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "EngineOAuthProvider_EngineOAuthToken_projectIdToEngineOAuthProvider": {
            "$ref": "#/components/schemas/EngineProject"
          },
          "EngineOAuthProvider": { "$ref": "#/components/schemas/EngineOAuthProvider" },
          "EngineUser": { "$ref": "#/components/schemas/EngineUser" }
        },
        "required": [
          "id",
          "grantedAt",
          "expiresAt",
          "tokenType",
          "scope",
          "verificationCode",
          "userId",
          "projectId",
          "providerId",
          "providerUserId",
          "providerUserData",
          "createdAt",
          "updatedAt"
        ]
      },
      "EngineUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string", "nullable": true },
          "username": { "type": "string", "nullable": true },
          "roles": { "type": "string", "nullable": true },
          "firstname": { "type": "string", "nullable": true },
          "lastname": { "type": "string", "nullable": true },
          "gender": { "type": "string", "nullable": true },
          "birthdate": { "type": "string", "format": "date-time", "nullable": true },
          "picture": { "type": "string", "nullable": true },
          "appData": { "type": "object", "nullable": true },
          "revokedAt": { "type": "string", "format": "date-time", "nullable": true },
          "emailVerifiedAt": { "type": "string", "format": "date-time", "nullable": true },
          "phoneVerifiedAt": { "type": "string", "format": "date-time", "nullable": true },
          "timezone": { "type": "number", "format": "float", "nullable": true },
          "lang": { "type": "string", "nullable": true },
          "projectId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "EngineOAuthToken": { "type": "array", "items": { "$ref": "#/components/schemas/EngineOAuthToken" } },
          "EngineRefreshSession": { "type": "array", "items": { "$ref": "#/components/schemas/EngineRefreshSession" } },
          "EngineProject": { "$ref": "#/components/schemas/EngineProject" }
        },
        "required": [
          "id",
          "email",
          "phone",
          "username",
          "roles",
          "firstname",
          "lastname",
          "gender",
          "birthdate",
          "picture",
          "appData",
          "revokedAt",
          "emailVerifiedAt",
          "phoneVerifiedAt",
          "timezone",
          "lang",
          "projectId",
          "createdAt",
          "updatedAt"
        ]
      },
      "TokensResponse": {
        "type": "object",
        "properties": {
          "accessToken": { "type": "string" },
          "refreshToken": { "type": "string" },
          "user": { "$ref": "#/components/schemas/EngineUser" }
        },
        "required": ["accessToken", "refreshToken", "user"]
      },
      "SignUpArgs": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "username": { "type": "string" },
          "password": { "type": "string" },
          "confirmPassword": { "type": "string" },
          "fingerprint": { "type": "string" },
          "redirectUri": { "type": "string" }
        },
        "required": ["email", "password", "fingerprint"]
      },
      "CompleteSignUpArgs": {
        "type": "object",
        "properties": { "fingerprint": { "type": "string" }, "code": { "type": "string" } },
        "required": ["fingerprint", "code"]
      },
      "SignOutArgs": { "type": "object", "properties": { "refreshToken": { "type": "string" } } },
      "ForgotPasswordArgs": {
        "type": "object",
        "properties": { "email": { "type": "string" }, "redirectUri": { "type": "string" } },
        "required": ["email"]
      },
      "CompleteForgotPasswordArgs": {
        "type": "object",
        "properties": {
          "password": { "type": "string" },
          "confirmPassword": { "type": "string" },
          "fingerprint": { "type": "string" },
          "code": { "type": "string" }
        },
        "required": ["password", "confirmPassword", "fingerprint", "code"]
      },
      "RefreshTokensResponse": {
        "type": "object",
        "properties": { "fingerprint": { "type": "string" }, "refreshToken": { "type": "string" } },
        "required": ["fingerprint"]
      },
      "EngineUserDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string", "nullable": true },
          "username": { "type": "string", "nullable": true },
          "roles": { "type": "string", "nullable": true },
          "firstname": { "type": "string", "nullable": true },
          "lastname": { "type": "string", "nullable": true },
          "gender": { "type": "string", "nullable": true },
          "birthdate": { "type": "string", "format": "date-time", "nullable": true },
          "picture": { "type": "string", "nullable": true },
          "appData": { "type": "object", "nullable": true },
          "revokedAt": { "type": "string", "format": "date-time", "nullable": true },
          "emailVerifiedAt": { "type": "string", "format": "date-time", "nullable": true },
          "phoneVerifiedAt": { "type": "string", "format": "date-time", "nullable": true },
          "timezone": { "type": "number", "format": "float", "nullable": true },
          "lang": { "type": "string", "nullable": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": [
          "id",
          "email",
          "phone",
          "username",
          "roles",
          "firstname",
          "lastname",
          "gender",
          "birthdate",
          "picture",
          "appData",
          "revokedAt",
          "emailVerifiedAt",
          "phoneVerifiedAt",
          "timezone",
          "lang",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateProfileArgs": {
        "type": "object",
        "properties": {
          "firstname": { "type": "string", "nullable": true },
          "lastname": { "type": "string", "nullable": true },
          "gender": { "type": "string", "nullable": true },
          "birthdate": { "type": "string", "format": "date-time", "nullable": true },
          "picture": { "type": "string", "nullable": true },
          "timezone": { "type": "number", "format": "float", "nullable": true },
          "lang": { "type": "string", "nullable": true },
          "oldPassword": { "type": "string" },
          "password": { "type": "string" },
          "confirmPassword": { "type": "string" }
        }
      },
      "FindManyEngineUserResponse": {
        "type": "object",
        "properties": {
          "engineUsers": { "type": "array", "items": { "$ref": "#/components/schemas/EngineUserDto" } },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["engineUsers", "meta"]
      },
      "UpdateEngineUserDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "phone": { "type": "string", "nullable": true },
          "username": { "type": "string", "nullable": true },
          "password": { "type": "string" },
          "roles": { "type": "string", "nullable": true },
          "firstname": { "type": "string", "nullable": true },
          "lastname": { "type": "string", "nullable": true },
          "gender": { "type": "string", "nullable": true },
          "birthdate": { "type": "string", "format": "date-time", "nullable": true },
          "picture": { "type": "string", "nullable": true },
          "appData": { "type": "object", "nullable": true },
          "revokedAt": { "type": "string", "format": "date-time", "nullable": true },
          "emailVerifiedAt": { "type": "string", "format": "date-time", "nullable": true },
          "phoneVerifiedAt": { "type": "string", "format": "date-time", "nullable": true },
          "timezone": { "type": "number", "format": "float", "nullable": true },
          "lang": { "type": "string", "nullable": true }
        }
      },
      "SendInvitationLinksArgs": {
        "type": "object",
        "properties": { "emails": { "type": "string" } },
        "required": ["emails"]
      },
      "EngineProjectDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "nameLocale": { "type": "object", "nullable": true },
          "clientId": { "type": "string" },
          "clientSecret": { "type": "string" },
          "public": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "nameLocale", "clientId", "clientSecret", "public", "createdAt", "updatedAt"]
      },
      "FindManyEngineProjectResponse": {
        "type": "object",
        "properties": {
          "engineProjects": { "type": "array", "items": { "$ref": "#/components/schemas/EngineProjectDto" } },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["engineProjects", "meta"]
      },
      "CreateEngineProjectDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "nameLocale": { "type": "object", "nullable": true },
          "clientId": { "type": "string" },
          "clientSecret": { "type": "string" },
          "public": { "type": "boolean" }
        },
        "required": ["name", "clientId", "clientSecret", "public"]
      },
      "UpdateEngineProjectDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "nameLocale": { "type": "object", "nullable": true },
          "clientId": { "type": "string" },
          "clientSecret": { "type": "string" },
          "public": { "type": "boolean" }
        }
      },
      "EngineRefreshSessionDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userAgent": { "type": "string", "nullable": true },
          "userIp": { "type": "string", "nullable": true },
          "expiresAt": { "type": "string", "format": "date-time", "nullable": true },
          "userData": { "type": "object", "nullable": true },
          "enabled": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "userAgent", "userIp", "expiresAt", "userData", "enabled", "createdAt", "updatedAt"]
      },
      "FindManyEngineRefreshSessionResponse": {
        "type": "object",
        "properties": {
          "engineRefreshSessions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EngineRefreshSessionDto" }
          },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["engineRefreshSessions", "meta"]
      },
      "UpdateEngineRefreshSessionDto": {
        "type": "object",
        "properties": {
          "refreshToken": { "type": "string" },
          "userAgent": { "type": "string", "nullable": true },
          "fingerprint": { "type": "string", "nullable": true },
          "userIp": { "type": "string", "nullable": true },
          "expiresAt": { "type": "string", "format": "date-time", "nullable": true },
          "userData": { "type": "object", "nullable": true },
          "enabled": { "type": "boolean" }
        }
      },
      "FindManyEngineRoleResponse": {
        "type": "object",
        "properties": {
          "userAvailableRoles": { "type": "array", "items": { "type": "string" } },
          "userDefaultRoles": { "type": "array", "items": { "type": "string" } },
          "adminDefaultRoles": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["userAvailableRoles", "userDefaultRoles", "adminDefaultRoles"]
      },
      "EnginePublicProjectDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "nameLocale": { "type": "object", "nullable": true },
          "clientId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "nameLocale", "clientId", "createdAt", "updatedAt"]
      },
      "FindManyEnginePublicProjectResponse": {
        "type": "object",
        "properties": {
          "enginePublicProjects": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnginePublicProjectDto" }
          },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["enginePublicProjects", "meta"]
      },
      "EngineEmailTemplateDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "subject": { "type": "string" },
          "subjectLocale": { "type": "object", "nullable": true },
          "text": { "type": "string" },
          "textLocale": { "type": "object", "nullable": true },
          "html": { "type": "string" },
          "htmlLocale": { "type": "object", "nullable": true },
          "operationName": { "type": "string", "nullable": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": [
          "id",
          "subject",
          "subjectLocale",
          "text",
          "textLocale",
          "html",
          "htmlLocale",
          "operationName",
          "createdAt",
          "updatedAt"
        ]
      },
      "FindManyEngineEmailTemplateResponse": {
        "type": "object",
        "properties": {
          "engineEmailTemplates": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EngineEmailTemplateDto" }
          },
          "meta": { "$ref": "#/components/schemas/FindManyResponseMeta" }
        },
        "required": ["engineEmailTemplates", "meta"]
      },
      "UpdateEngineEmailTemplateDto": {
        "type": "object",
        "properties": {
          "subject": { "type": "string" },
          "subjectLocale": { "type": "object", "nullable": true },
          "text": { "type": "string" },
          "textLocale": { "type": "object", "nullable": true },
          "html": { "type": "string" },
          "htmlLocale": { "type": "object", "nullable": true },
          "operationName": { "type": "string", "nullable": true }
        }
      },
      "OAuthProvider": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "url": { "type": "string" }
        },
        "required": ["id", "name", "createdAt", "updatedAt", "url"]
      },
      "EngineOAuthVerificationArgs": {
        "type": "object",
        "properties": { "verificationCode": { "type": "string" }, "fingerprint": { "type": "string" } },
        "required": ["verificationCode", "fingerprint"]
      },
      "Date": { "type": "object", "properties": {} },
      "FilesErrorEnum": { "type": "string", "enum": ["FILES-000", "FILES-001"] },
      "FilesError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Files error (FILES-000), Forbidden (FILES-001)",
            "example": "Files error"
          },
          "code": { "example": "FILES-000", "allOf": [{ "$ref": "#/components/schemas/FilesErrorEnum" }] },
          "metadata": { "type": "object" }
        },
        "required": ["message", "code"]
      },
      "NotificationsErrorEnum": {
        "type": "string",
        "enum": ["NOTIFICATIONS-000", "NOTIFICATIONS-001", "NOTIFICATIONS-002", "NOTIFICATIONS-003"]
      },
      "NotificationsErrorMetadataConstraint": {
        "type": "object",
        "properties": { "name": { "type": "string" }, "description": { "type": "string" } },
        "required": ["name", "description"]
      },
      "NotificationsErrorMetadata": {
        "type": "object",
        "properties": {
          "property": { "type": "string" },
          "constraints": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NotificationsErrorMetadataConstraint" }
          },
          "children": { "type": "array", "items": { "$ref": "#/components/schemas/NotificationsErrorMetadata" } }
        },
        "required": ["property", "constraints"]
      },
      "NotificationsError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notifications error (NOTIFICATIONS-000), Tenant ID not set (NOTIFICATIONS-001), User ID not set (NOTIFICATIONS-002), Forbidden (NOTIFICATIONS-003)",
            "example": "Notifications error"
          },
          "code": {
            "example": "NOTIFICATIONS-000",
            "allOf": [{ "$ref": "#/components/schemas/NotificationsErrorEnum" }]
          },
          "metadata": { "type": "array", "items": { "$ref": "#/components/schemas/NotificationsErrorMetadata" } }
        },
        "required": ["message", "code"]
      },
      "NotificationsUserScalarFieldEnum": {
        "type": "string",
        "enum": ["id", "externalTenantId", "externalUserId", "createdAt", "updatedAt"]
      },
      "NotificationsEventScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "type",
          "operationName",
          "subject",
          "html",
          "text",
          "attempt",
          "used",
          "error",
          "senderUserId",
          "senderData",
          "recipientGroupId",
          "recipientUserId",
          "recipientData",
          "externalTenantId",
          "createdAt",
          "updatedAt"
        ]
      },
      "NotificationsEntities": {
        "type": "object",
        "properties": {
          "NotificationsUser": { "allOf": [{ "$ref": "#/components/schemas/NotificationsUserScalarFieldEnum" }] },
          "NotificationsEvent": { "allOf": [{ "$ref": "#/components/schemas/NotificationsEventScalarFieldEnum" }] }
        },
        "required": ["NotificationsUser", "NotificationsEvent"]
      },
      "EngineErrorEnum": {
        "type": "string",
        "enum": [
          "ENGINE-000",
          "ENGINE-001",
          "ENGINE-002",
          "ENGINE-003",
          "ENGINE-004",
          "ENGINE-005",
          "ENGINE-006",
          "ENGINE-007",
          "ENGINE-008",
          "ENGINE-009",
          "ENGINE-010",
          "ENGINE-011",
          "ENGINE-012",
          "ENGINE-013",
          "ENGINE-014",
          "ENGINE-015",
          "ENGINE-016",
          "ENGINE-017",
          "ENGINE-018"
        ]
      },
      "EngineError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Engine error (ENGINE-000), User not found (ENGINE-001), Wrong password (ENGINE-002), User is exists (ENGINE-003), Wrong activate email code (ENGINE-004), Activate email not processed (ENGINE-005), Activate email processed (ENGINE-006), Refresh token not provided (ENGINE-007), Session expired (ENGINE-008), Invalid refresh session (ENGINE-009), Access token expired (ENGINE-010), User is exists (ENGINE-011), Email not verified (ENGINE-012), Forbidden (ENGINE-013), Wrong old password (ENGINE-014), Non-existent role specified (ENGINE-015), Bad access token (ENGINE-016), Your session has been blocked (ENGINE-017), Verification code not found (ENGINE-018)",
            "example": "Engine error"
          },
          "code": { "example": "ENGINE-000", "allOf": [{ "$ref": "#/components/schemas/EngineErrorEnum" }] },
          "metadata": { "type": "object" }
        },
        "required": ["message", "code"]
      },
      "EngineProjectScalarFieldEnum": {
        "type": "string",
        "enum": ["id", "name", "nameLocale", "clientId", "clientSecret", "public", "createdAt", "updatedAt"]
      },
      "EngineUserScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "email",
          "phone",
          "username",
          "password",
          "roles",
          "firstname",
          "lastname",
          "gender",
          "birthdate",
          "picture",
          "appData",
          "revokedAt",
          "emailVerifiedAt",
          "phoneVerifiedAt",
          "timezone",
          "lang",
          "projectId",
          "createdAt",
          "updatedAt"
        ]
      },
      "EngineRefreshSessionScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "refreshToken",
          "userAgent",
          "fingerprint",
          "userIp",
          "expiresAt",
          "userData",
          "enabled",
          "userId",
          "projectId",
          "createdAt",
          "updatedAt"
        ]
      },
      "EngineEmailTemplateScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "subject",
          "subjectLocale",
          "text",
          "textLocale",
          "html",
          "htmlLocale",
          "operationName",
          "projectId",
          "createdAt",
          "updatedAt"
        ]
      },
      "EngineOAuthProviderScalarFieldEnum": { "type": "string", "enum": ["id", "name", "createdAt", "updatedAt"] },
      "EngineOAuthProviderSettingsScalarFieldEnum": {
        "type": "string",
        "enum": ["id", "name", "value", "providerId", "createdAt", "updatedAt"]
      },
      "EngineOAuthTokenScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "grantedAt",
          "accessToken",
          "refreshToken",
          "expiresAt",
          "tokenType",
          "scope",
          "verificationCode",
          "userId",
          "projectId",
          "providerId",
          "providerUserId",
          "providerUserData",
          "createdAt",
          "updatedAt"
        ]
      },
      "EngineRole": { "type": "string", "enum": ["admin", "manager", "user"] },
      "EngineEntities": {
        "type": "object",
        "properties": {
          "EngineProject": { "allOf": [{ "$ref": "#/components/schemas/EngineProjectScalarFieldEnum" }] },
          "EngineUser": { "allOf": [{ "$ref": "#/components/schemas/EngineUserScalarFieldEnum" }] },
          "EngineRefreshSession": { "allOf": [{ "$ref": "#/components/schemas/EngineRefreshSessionScalarFieldEnum" }] },
          "EngineEmailTemplate": { "allOf": [{ "$ref": "#/components/schemas/EngineEmailTemplateScalarFieldEnum" }] },
          "EngineOAuthProvider": { "allOf": [{ "$ref": "#/components/schemas/EngineOAuthProviderScalarFieldEnum" }] },
          "EngineOAuthProviderSettings": {
            "allOf": [{ "$ref": "#/components/schemas/EngineOAuthProviderSettingsScalarFieldEnum" }]
          },
          "EngineOAuthToken": { "allOf": [{ "$ref": "#/components/schemas/EngineOAuthTokenScalarFieldEnum" }] },
          "role": { "allOf": [{ "$ref": "#/components/schemas/EngineRole" }] }
        },
        "required": [
          "EngineProject",
          "EngineUser",
          "EngineRefreshSession",
          "EngineEmailTemplate",
          "EngineOAuthProvider",
          "EngineOAuthProviderSettings",
          "EngineOAuthToken",
          "role"
        ]
      },
      "ValidationErrorEnum": { "type": "string", "enum": ["VALIDATION-000"] },
      "ValidationErrorMetadataConstraint": {
        "type": "object",
        "properties": { "name": { "type": "string" }, "description": { "type": "string" } },
        "required": ["name", "description"]
      },
      "ValidationErrorMetadata": {
        "type": "object",
        "properties": {
          "property": { "type": "string" },
          "constraints": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationErrorMetadataConstraint" }
          },
          "children": { "type": "array", "items": { "$ref": "#/components/schemas/ValidationErrorMetadata" } }
        },
        "required": ["property", "constraints"]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Validation error (VALIDATION-000)",
            "example": "Validation error"
          },
          "code": { "example": "VALIDATION-000", "allOf": [{ "$ref": "#/components/schemas/ValidationErrorEnum" }] },
          "metadata": { "type": "array", "items": { "$ref": "#/components/schemas/ValidationErrorMetadata" } }
        },
        "required": ["message", "code"]
      },
      "WebhookErrorEnum": {
        "type": "string",
        "enum": ["WEBHOOK-000", "WEBHOOK-001", "WEBHOOK-002", "WEBHOOK-003", "WEBHOOK-004", "WEBHOOK-005"]
      },
      "WebhookError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Webhook error (WEBHOOK-000), Tenant ID not set (WEBHOOK-003), User ID not set (WEBHOOK-002), Forbidden (WEBHOOK-001), User not found (WEBHOOK-004), Event not found (WEBHOOK-005)",
            "example": "Webhook error"
          },
          "code": { "example": "WEBHOOK-000", "allOf": [{ "$ref": "#/components/schemas/WebhookErrorEnum" }] },
          "metadata": { "type": "object" }
        },
        "required": ["message", "code"]
      },
      "WebhookScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "eventName",
          "endpoint",
          "enabled",
          "headers",
          "requestTimeout",
          "externalTenantId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "workUntilDate"
        ]
      },
      "WebhookLogScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "request",
          "responseStatus",
          "response",
          "webhookStatus",
          "webhookId",
          "externalTenantId",
          "createdAt",
          "updatedAt"
        ]
      },
      "WebhookUserScalarFieldEnum": {
        "type": "string",
        "enum": ["id", "externalTenantId", "externalUserId", "userRole", "createdAt", "updatedAt"]
      },
      "WebhookEntities": {
        "type": "object",
        "properties": {
          "Webhook": { "allOf": [{ "$ref": "#/components/schemas/WebhookScalarFieldEnum" }] },
          "WebhookLog": { "allOf": [{ "$ref": "#/components/schemas/WebhookLogScalarFieldEnum" }] },
          "WebhookUser": { "allOf": [{ "$ref": "#/components/schemas/WebhookUserScalarFieldEnum" }] }
        },
        "required": ["Webhook", "WebhookLog", "WebhookUser"]
      }
    }
  }
}
